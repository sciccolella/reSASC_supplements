SASC_REC="tools/sasc_rec/sasc"
SASC="tools/sasc/sasc"
SASC_ITERS = 10
SASC_S = 100000.0
SASC_C = 0.001

NUMTHREADS=8


sasc_rec = {
    requires TOTCELLS : "number of cells"
    requires TOTMUTS : "number of mutations"
    requires FNRATE : "fn rate"
    requires FPRATE : "fp rate"
    requires MAXL : "max losses rate"
    requires MAXR : "max recurrences rate"
    requires SASC_G : "gamma loss rate"
    requires SASC_Q : "q recurrent rate"
    produce(input.prefix+".sasc_rec.mlt.gv",input.prefix+".sasc_rec.out.txt") {
        uses(threads:NUMTHREADS) {
            exec """
                $SASC_REC -i $input -m $TOTMUTS -n $TOTCELLS -b $FPRATE -a $FNRATE -k $MAXL -j $MAXR -d $MAXL -c $MAXR -r $SASC_ITERS -p $NUMTHREADS -g $SASC_G -q $SASC_Q -x -S $SASC_S -C $SASC_C -P ${input.prefix}.sasc_rec
            """
        }
    }
}

sasc = {
    requires TOTCELLS : "number of cells"
    requires TOTMUTS : "number of mutations"
    requires FNRATE : "fn rate"
    requires FPRATE : "fp rate"
    requires MAXL : "max losses rate"
    requires SASC_G : "gamma loss rate"
    
    produce(input.prefix+".sasc.mlt.gv",input.prefix+".sasc.out.txt") {
        uses(threads:NUMTHREADS) {
            exec """
                $SASC -i $input -m $TOTMUTS -n $TOTCELLS -b $FPRATE -a $FNRATE -k $MAXL -d $MAXL -r $SASC_ITERS -p $threads -x -S $SASC_S -C $SASC_C -g $SASC_G -P ${input.prefix}.sasc
            """
        }
    }
}

plot = {
    requires PLOTDIR : "plot dir"
    requires EXPDIR : "results outdir"
    exec """
        python comparison/plotting/make.py  \
            --tground data/$EXPDIR/*_truetree.gv  \
            --tloaders sasc sasc  \
            --ttools data/$EXPDIR/*.sasc_rec.mlt.gv  \
            --ttools data/$EXPDIR/*.sasc.mlt.gv  \
            --names "reSASC" SASC \
            --mgroundT data/$EXPDIR/sim_*_truescs.txt  \
            --mgroundN data/$EXPDIR/sim_*_scs.txt  \
            --mtools data/$EXPDIR/*.sasc_rec.out.txt  \
            --mtools data/$EXPDIR/*.sasc.out.txt  \
            --exp $EXPDIR -o $PLOTDIR
    """
}

Bpipe.run { 
    "sim_%_scs.txt" * [
            sasc,
            sasc_rec
        ] + plot.using(PLOTDIR:"test")
}